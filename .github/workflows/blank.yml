# This is a basic workflow to help you get started with Actions

name: Penghijauan

# Controls when the workflow will run
on:
  push:
    branches: [main]
  workflow_dispatch:
  schedule:
    - cron: '*/20 * * * *'
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "build"
#   build:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v2

#       # Runs a single command using the runners shell
#       - name: Banner
#         run: echo Mulai Penghijauan...

#       # Runs a set of commands using the runners shell
#       - name: update readme
#         run: date >> README.md
#       - name: push git
#         run: |
#           git add .
#           git config user.name 'ainxgans'
#           git config user.email 'maulana.120100@gmail.com'
#           git commit -m "Penghijauan"
#           git push
#       - name: update
#         run: sed -i '$ d' README.md
#       - name: second push
#         run: |
#           git add .
#           git config user.name 'ainxgans'
#           git config user.email 'maulana.120100@gmail.com'
#           git commit -m "Penghijauan"
#           git push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout kode
      uses: actions/checkout@v2

    - name: Set up Git
      run: |
        git config user.name "ainxgans"
        git config user.email "maulana.120100@gmail.com"

    - name: Execute Bash Script
      run: |
        start_date="2023-01-01"
        end_date="2023-06-24"

        formatted_start_date=$(date -d "$start_date" +"%a %b %d 14:00 %Y +0100")
        formatted_end_date=$(date -d "$end_date" +"%a %b %d 14:00 %Y +0100")

        current_date="$formatted_start_date"
        while [ "$current_date" != "$formatted_end_date" ]; do
            for i in {1..100}; do
                echo "Commit ke-$i pada tanggal $current_date" > README.md
                git add README.md
                GIT_COMMITTER_DATE="$current_date" git commit -m "Commit ke-$i pada tanggal $current_date"
            done
        done
        git push origin main
